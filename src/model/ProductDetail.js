/**
 * Aliseeks API
 * AliExpress product searching and product details retrieval API. 
 *
 * OpenAPI spec version: 0.10.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ProductAttribute', 'model/ProductPriceOption', 'model/ProductReviews', 'model/PromotionOption', 'model/SkuProperty', 'model/TradeInformation'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ProductAttribute'), require('./ProductPriceOption'), require('./ProductReviews'), require('./PromotionOption'), require('./SkuProperty'), require('./TradeInformation'));
  } else {
    // Browser globals (root is window)
    if (!root.AliseeksApi) {
      root.AliseeksApi = {};
    }
    root.AliseeksApi.ProductDetail = factory(root.AliseeksApi.ApiClient, root.AliseeksApi.ProductAttribute, root.AliseeksApi.ProductPriceOption, root.AliseeksApi.ProductReviews, root.AliseeksApi.PromotionOption, root.AliseeksApi.SkuProperty, root.AliseeksApi.TradeInformation);
  }
}(this, function(ApiClient, ProductAttribute, ProductPriceOption, ProductReviews, PromotionOption, SkuProperty, TradeInformation) {
  'use strict';



  /**
   * The ProductDetail model module.
   * @module model/ProductDetail
   * @version 0.10.0
   */

  /**
   * Constructs a new <code>ProductDetail</code>.
   * AliExpress product details 
   * @alias module:model/ProductDetail
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>ProductDetail</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ProductDetail} obj Optional instance to populate.
   * @return {module:model/ProductDetail} The populated <code>ProductDetail</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('categoryId')) {
        obj['categoryId'] = ApiClient.convertToType(data['categoryId'], 'String');
      }
      if (data.hasOwnProperty('companyId')) {
        obj['companyId'] = ApiClient.convertToType(data['companyId'], 'String');
      }
      if (data.hasOwnProperty('sellerId')) {
        obj['sellerId'] = ApiClient.convertToType(data['sellerId'], 'String');
      }
      if (data.hasOwnProperty('title')) {
        obj['title'] = ApiClient.convertToType(data['title'], 'String');
      }
      if (data.hasOwnProperty('productImages')) {
        obj['productImages'] = ApiClient.convertToType(data['productImages'], ['String']);
      }
      if (data.hasOwnProperty('statusId')) {
        obj['statusId'] = ApiClient.convertToType(data['statusId'], 'Number');
      }
      if (data.hasOwnProperty('countPerLot')) {
        obj['countPerLot'] = ApiClient.convertToType(data['countPerLot'], 'Number');
      }
      if (data.hasOwnProperty('wishListCount')) {
        obj['wishListCount'] = ApiClient.convertToType(data['wishListCount'], 'Number');
      }
      if (data.hasOwnProperty('unit')) {
        obj['unit'] = ApiClient.convertToType(data['unit'], 'String');
      }
      if (data.hasOwnProperty('multiUnit')) {
        obj['multiUnit'] = ApiClient.convertToType(data['multiUnit'], 'String');
      }
      if (data.hasOwnProperty('promotions')) {
        obj['promotions'] = ApiClient.convertToType(data['promotions'], [PromotionOption]);
      }
      if (data.hasOwnProperty('attributes')) {
        obj['attributes'] = ApiClient.convertToType(data['attributes'], [ProductAttribute]);
      }
      if (data.hasOwnProperty('prices')) {
        obj['prices'] = ApiClient.convertToType(data['prices'], [ProductPriceOption]);
      }
      if (data.hasOwnProperty('reviews')) {
        obj['reviews'] = ApiClient.convertToType(data['reviews'], [ProductReviews]);
      }
      if (data.hasOwnProperty('trade')) {
        obj['trade'] = TradeInformation.constructFromObject(data['trade']);
      }
      if (data.hasOwnProperty('skuProperties')) {
        obj['skuProperties'] = ApiClient.convertToType(data['skuProperties'], [SkuProperty]);
      }
    }
    return obj;
  }

  /**
   * The AliExpress item ID 
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * The item category 
   * @member {String} categoryId
   */
  exports.prototype['categoryId'] = undefined;
  /**
   * The company ID 
   * @member {String} companyId
   */
  exports.prototype['companyId'] = undefined;
  /**
   * The seller ID 
   * @member {String} sellerId
   */
  exports.prototype['sellerId'] = undefined;
  /**
   * The subject / title of the item 
   * @member {String} title
   */
  exports.prototype['title'] = undefined;
  /**
   * The item images 
   * @member {Array.<String>} productImages
   */
  exports.prototype['productImages'] = undefined;
  /**
   * The AliExpress status 
   * @member {Number} statusId
   */
  exports.prototype['statusId'] = undefined;
  /**
   * The number of items per lot 
   * @member {Number} countPerLot
   */
  exports.prototype['countPerLot'] = undefined;
  /**
   * Number of times the item has been added to a wishlist 
   * @member {Number} wishListCount
   */
  exports.prototype['wishListCount'] = undefined;
  /**
   * The unit of the item 
   * @member {String} unit
   */
  exports.prototype['unit'] = undefined;
  /**
   * The unit for multiple items 
   * @member {String} multiUnit
   */
  exports.prototype['multiUnit'] = undefined;
  /**
   * The promotions present on an item 
   * @member {Array.<module:model/PromotionOption>} promotions
   */
  exports.prototype['promotions'] = undefined;
  /**
   * The attributes of an item 
   * @member {Array.<module:model/ProductAttribute>} attributes
   */
  exports.prototype['attributes'] = undefined;
  /**
   * List of price options for an item 
   * @member {Array.<module:model/ProductPriceOption>} prices
   */
  exports.prototype['prices'] = undefined;
  /**
   * The reviews for an item 
   * @member {Array.<module:model/ProductReviews>} reviews
   */
  exports.prototype['reviews'] = undefined;
  /**
   * @member {module:model/TradeInformation} trade
   */
  exports.prototype['trade'] = undefined;
  /**
   * List of sku properties that correspond to an item 
   * @member {Array.<module:model/SkuProperty>} skuProperties
   */
  exports.prototype['skuProperties'] = undefined;



  return exports;
}));


