/**
 * Aliseeks API
 * AliExpress product searching and product details retrieval API. 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/PriceSummary', 'model/ProductAttribute', 'model/ProductPromotion', 'model/ProductReviews', 'model/ProductSeller', 'model/ProductShippingOptions', 'model/SkuPriceOption', 'model/TradeInformation'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./PriceSummary'), require('./ProductAttribute'), require('./ProductPromotion'), require('./ProductReviews'), require('./ProductSeller'), require('./ProductShippingOptions'), require('./SkuPriceOption'), require('./TradeInformation'));
  } else {
    // Browser globals (root is window)
    if (!root.AliseeksApi) {
      root.AliseeksApi = {};
    }
    root.AliseeksApi.Product = factory(root.AliseeksApi.ApiClient, root.AliseeksApi.PriceSummary, root.AliseeksApi.ProductAttribute, root.AliseeksApi.ProductPromotion, root.AliseeksApi.ProductReviews, root.AliseeksApi.ProductSeller, root.AliseeksApi.ProductShippingOptions, root.AliseeksApi.SkuPriceOption, root.AliseeksApi.TradeInformation);
  }
}(this, function(ApiClient, PriceSummary, ProductAttribute, ProductPromotion, ProductReviews, ProductSeller, ProductShippingOptions, SkuPriceOption, TradeInformation) {
  'use strict';



  /**
   * The Product model module.
   * @module model/Product
   * @version 1.0.3
   */

  /**
   * Constructs a new <code>Product</code>.
   * AliExpress product 
   * @alias module:model/Product
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>Product</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Product} obj Optional instance to populate.
   * @return {module:model/Product} The populated <code>Product</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('categoryId')) {
        obj['categoryId'] = ApiClient.convertToType(data['categoryId'], 'String');
      }
      if (data.hasOwnProperty('companyId')) {
        obj['companyId'] = ApiClient.convertToType(data['companyId'], 'String');
      }
      if (data.hasOwnProperty('sellerId')) {
        obj['sellerId'] = ApiClient.convertToType(data['sellerId'], 'String');
      }
      if (data.hasOwnProperty('title')) {
        obj['title'] = ApiClient.convertToType(data['title'], 'String');
      }
      if (data.hasOwnProperty('statusId')) {
        obj['statusId'] = ApiClient.convertToType(data['statusId'], 'Number');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('countPerLot')) {
        obj['countPerLot'] = ApiClient.convertToType(data['countPerLot'], 'Number');
      }
      if (data.hasOwnProperty('wishListCount')) {
        obj['wishListCount'] = ApiClient.convertToType(data['wishListCount'], 'Number');
      }
      if (data.hasOwnProperty('unit')) {
        obj['unit'] = ApiClient.convertToType(data['unit'], 'String');
      }
      if (data.hasOwnProperty('multiUnit')) {
        obj['multiUnit'] = ApiClient.convertToType(data['multiUnit'], 'String');
      }
      if (data.hasOwnProperty('seller')) {
        obj['seller'] = ProductSeller.constructFromObject(data['seller']);
      }
      if (data.hasOwnProperty('reviews')) {
        obj['reviews'] = ProductReviews.constructFromObject(data['reviews']);
      }
      if (data.hasOwnProperty('trade')) {
        obj['trade'] = TradeInformation.constructFromObject(data['trade']);
      }
      if (data.hasOwnProperty('promotion')) {
        obj['promotion'] = ProductPromotion.constructFromObject(data['promotion']);
      }
      if (data.hasOwnProperty('productImages')) {
        obj['productImages'] = ApiClient.convertToType(data['productImages'], ['String']);
      }
      if (data.hasOwnProperty('attributes')) {
        obj['attributes'] = ApiClient.convertToType(data['attributes'], [ProductAttribute]);
      }
      if (data.hasOwnProperty('htmlDescription')) {
        obj['htmlDescription'] = ApiClient.convertToType(data['htmlDescription'], 'String');
      }
      if (data.hasOwnProperty('priceSummary')) {
        obj['priceSummary'] = PriceSummary.constructFromObject(data['priceSummary']);
      }
      if (data.hasOwnProperty('prices')) {
        obj['prices'] = ApiClient.convertToType(data['prices'], [SkuPriceOption]);
      }
      if (data.hasOwnProperty('shipping')) {
        obj['shipping'] = ApiClient.convertToType(data['shipping'], [ProductShippingOptions]);
      }
    }
    return obj;
  }

  /**
   * The AliExpress item ID 
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * The item category 
   * @member {String} categoryId
   */
  exports.prototype['categoryId'] = undefined;
  /**
   * The company ID 
   * @member {String} companyId
   */
  exports.prototype['companyId'] = undefined;
  /**
   * The seller ID 
   * @member {String} sellerId
   */
  exports.prototype['sellerId'] = undefined;
  /**
   * The subject / title of the item 
   * @member {String} title
   */
  exports.prototype['title'] = undefined;
  /**
   * The AliExpress status ID 
   * @member {Number} statusId
   */
  exports.prototype['statusId'] = undefined;
  /**
   * The AliExpress status 
   * @member {module:model/Product.StatusEnum} status
   */
  exports.prototype['status'] = undefined;
  /**
   * The number of items per lot 
   * @member {Number} countPerLot
   */
  exports.prototype['countPerLot'] = undefined;
  /**
   * Number of times the item has been added to a wishlist 
   * @member {Number} wishListCount
   */
  exports.prototype['wishListCount'] = undefined;
  /**
   * The unit of the item 
   * @member {String} unit
   */
  exports.prototype['unit'] = undefined;
  /**
   * The unit for multiple items 
   * @member {String} multiUnit
   */
  exports.prototype['multiUnit'] = undefined;
  /**
   * @member {module:model/ProductSeller} seller
   */
  exports.prototype['seller'] = undefined;
  /**
   * @member {module:model/ProductReviews} reviews
   */
  exports.prototype['reviews'] = undefined;
  /**
   * @member {module:model/TradeInformation} trade
   */
  exports.prototype['trade'] = undefined;
  /**
   * @member {module:model/ProductPromotion} promotion
   */
  exports.prototype['promotion'] = undefined;
  /**
   * The item images 
   * @member {Array.<String>} productImages
   */
  exports.prototype['productImages'] = undefined;
  /**
   * Attributes associated with the AliExpress product 
   * @member {Array.<module:model/ProductAttribute>} attributes
   */
  exports.prototype['attributes'] = undefined;
  /**
   * The product HTML description 
   * @member {String} htmlDescription
   */
  exports.prototype['htmlDescription'] = undefined;
  /**
   * @member {module:model/PriceSummary} priceSummary
   */
  exports.prototype['priceSummary'] = undefined;
  /**
   * All the variations of an AliExpress item and prices associated with each variation 
   * @member {Array.<module:model/SkuPriceOption>} prices
   */
  exports.prototype['prices'] = undefined;
  /**
   * The shipping options of an AliExpress item 
   * @member {Array.<module:model/ProductShippingOptions>} shipping
   */
  exports.prototype['shipping'] = undefined;


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "active"
     * @const
     */
    "active": "active",
    /**
     * value: "inactive"
     * @const
     */
    "inactive": "inactive"  };


  return exports;
}));


